08:00  - 17:00 ( 1 hour lunch 12:15 - 13:15 ) 
finished and tested procedure to provide abilities to resort content nodes in document layout. 
17:00 - 18:00 - GIT Self Training




---------------------------------

		---- if source and target id are the same, the client is not swapping or your incoming call from the ui stack had an issue/problem....don't process anything no sort change.
				---- in this step we're calculating the final sort value for the the id that will be changed.
				--PRINT('rowsource: '+CAST(@rowsource AS VARCHAR) + ' rowtarget: '+CAST(@rowtarget AS VARCHAR)) 
				--IF ( @rowsource != @rowtarget ) 
				--	BEGIN
				--		UPDATE  #tmp2
				--		SET     SORT = ( CASE WHEN @firstItem = 0	-- client is moving sort to the first sort item.
				--							  THEN ( SELECT SORT
				--									 FROM   #tmpSource
				--									 WHERE  NodeID = @TargetContentNodeID
				--								   )
				--							  WHEN @firstItem = 1 AND @rowtarget < @rowsource THEN 
				--									( SELECT SORT + 1											   -- client is moving sort order between boundary conditions
				--									 FROM   #tmpSource
				--									 WHERE  NodeID = @TargetContentNodeID
				--								   )
				--							  WHEN @firstItem = 1 AND @rowtarget > @rowsource AND @SortTargetValue != @maxsort THEN 
				--									( SELECT SORT 											   -- client is moving sort order between boundary conditions
				--									 FROM   #tmpSource
				--								   )
				--							  WHEN  @SortTargetValue = @maxsort THEN ( SELECT SORT = @maxsort )	   -- client is moving node to end of stack
				                              
				--						 END )
				--		WHERE   NodeID = @SourceContentNodeID 
				--	END

	
				---- if target < source process accordingly	we're going to update the sort records in the temp table. 
				--PRINT('rowtarget: '+CAST(@rowtarget AS VARCHAR) + ' rowsource: '+CAST(@rowsource AS VARCHAR))
				--IF (@rowtarget < @rowsource)
				--	BEGIN
				--		 UPDATE #tmpSource 
				--			SET SORT = 
				--			SORT + 1 
				--			WHERE ROW BETWEEN @rowtarget AND @rowsource 
				--			--AND ROW >= ( SELECT ROW FROM #tmp2 WHERE NodeID = @SourceContentNodeID ) 
						 
				--	END
				--ELSE
				--	BEGIN
				--		  UPDATE #tmpSource
				--			SET SORT = SORT -1 
				--			WHERE ROW BETWEEN @rowsource AND @rowtarget
							
				--	END 
					
				--UPDATE #tmpSource SET SORT = ( SELECT SORT FROM #tmp2 WHERE NodeID = @SourceContentNodeID ) WHERE NodeID = @SourceContentNodeID
			 
				-- SELECT * FROM #tmpSource   ORDER BY sort
				-- UPDATE Docs.ContentNodes SET Sort = ( SELECT  Sort FROM #tmpSource WHERE #tmpSource.NodeID = Docs.ContentNodes.NodeID ) WHERE   NodeID = ( SELECT nodeid FROM #tmpSource WHERE NodeID = #tmpSource.NodeID)